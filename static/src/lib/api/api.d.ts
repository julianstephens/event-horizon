/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    /** API info */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["Info"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/alerts": {
    /** List */
    get: {
      parameters: {
        query?: {
          page?: number;
          perPage?: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["AlertDTO"][];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Create */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AlertRequestDTO"];
        };
      };
      responses: {
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Successful response */
        "HTTPStatus.CREATED": {
          content: {
            "application/json": {
              data: components["schemas"]["AlertDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/alerts/{id}": {
    /** Get */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["AlertDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Delete */
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Successful response */
        "HTTPStatus.NO_CONTENT": {
          content: {
            "application/json": {
              data: components["schemas"]["Empty"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Update */
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AlertRequestDTOUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["AlertDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/auth/login": {
    /** Login */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LoginRequestDTO"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["AuthResponseDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/auth/logout": {
    /** Logout */
    delete: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["LogoutResponseDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Authentication error */
        401: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/auth/me": {
    /** Whoami */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["UserDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/auth/refresh": {
    /** Refresh */
    post: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["RefreshReponseDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/auth/register": {
    /** Register */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RegisterRequestDTO"];
        };
      };
      responses: {
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Successful response */
        "HTTPStatus.CREATED": {
          content: {
            "application/json": {
              data: components["schemas"]["AuthResponseDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/events": {
    /** List */
    get: {
      parameters: {
        query?: {
          page?: number;
          perPage?: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["EventDTO"][];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Create */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EventRequestDTO"];
        };
      };
      responses: {
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Successful response */
        "HTTPStatus.CREATED": {
          content: {
            "application/json": {
              data: components["schemas"]["EventDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/events/{id}": {
    /** Get */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["EventDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Update */
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EventRequestDTOUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["EventDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Delete */
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Successful response */
        "HTTPStatus.NO_CONTENT": {
          content: {
            "application/json": {
              data: components["schemas"]["Empty"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/events/{id}/data": {
    /** Get Data */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["EventDataDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Create Data */
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EventDataRequestDTO"];
        };
      };
      responses: {
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Successful response */
        "HTTPStatus.CREATED": {
          content: {
            "application/json": {
              data: components["schemas"]["EventDataDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/events/{id}/data/{data_id}": {
    /** Update Data */
    put: {
      parameters: {
        path: {
          id: string;
          data_id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EventDataRequestDTO"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["EventDataDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/reports": {
    /** List */
    get: {
      parameters: {
        query?: {
          page?: number;
          perPage?: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["ReportDTO"][];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Create */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ReportRequestDTO"];
        };
      };
      responses: {
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Successful response */
        "HTTPStatus.CREATED": {
          content: {
            "application/json": {
              data: components["schemas"]["ReportDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/reports/{id}": {
    /** Get */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["ReportDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Delete */
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Successful response */
        "HTTPStatus.NO_CONTENT": {
          content: {
            "application/json": {
              data: components["schemas"]["Empty"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Update */
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ReportRequestDTOUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["ReportDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/users": {
    /** List */
    get: {
      parameters: {
        query?: {
          page?: number;
          perPage?: number;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["UserDTO"][];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Authentication error */
        401: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Create */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UserRequestDTO"];
        };
      };
      responses: {
        /** @description Authentication error */
        401: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Successful response */
        "HTTPStatus.CREATED": {
          content: {
            "application/json": {
              data: components["schemas"]["UserDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
  "/users/{id}": {
    /** Get */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["UserDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Authentication error */
        401: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Delete */
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Authentication error */
        401: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Successful response */
        "HTTPStatus.NO_CONTENT": {
          content: {
            "application/json": {
              data: components["schemas"]["Empty"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
    /** Update */
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UserRequestDTOUpdate"];
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": {
              data: components["schemas"]["UserDTO"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Authentication error */
        401: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Not found */
        404: {
          content: {
            "application/json": {
              data: components["schemas"]["HTTPError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
        /** @description Validation error */
        422: {
          content: {
            "application/json": {
              data: components["schemas"]["ValidationError"];
              links?: components["schemas"]["Relation"][];
              pagination?: components["schemas"]["Pagination"];
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AlertDTO: {
      condition?: Record<string, never>;
      createdAt: string;
      id: string;
      updatedAt?: string;
    };
    AlertRequestDTO: {
      condition: Record<string, never>;
      eventId: number;
      userId: number;
    };
    AlertRequestDTOUpdate: {
      condition?: Record<string, never>;
      eventId?: number;
      userId?: number;
    };
    AuthResponseDTO: {
      accessToken: string;
      refreshToken: string;
      user: components["schemas"]["UserDTO"];
    };
    Empty: Record<string, never>;
    EventDTO: {
      createdAt: string;
      description?: string;
      /** Format: date-time */
      endDate?: string;
      id: string;
      name?: string;
      /** Format: date-time */
      startDate?: string;
      updatedAt: string;
    };
    EventDataDTO: {
      createdAt: string;
      data?: Record<string, never>;
      id: string;
      /** Format: date-time */
      timestamp?: string;
      updatedAt: string;
    };
    EventDataRequestDTO: {
      data: Record<string, never>;
      /** Format: date-time */
      timestamp: string;
    };
    EventRequestDTO: {
      authorId: number;
      description: string;
      /** Format: date-time */
      endDate: string;
      name: string;
      /** Format: date-time */
      startDate: string;
    };
    EventRequestDTOUpdate: {
      authorId?: number;
      description?: string;
      /** Format: date-time */
      endDate?: string;
      name?: string;
      /** Format: date-time */
      startDate?: string;
    };
    HTTPError: {
      detail?: Record<string, never>;
      message?: string;
    };
    Info: {
      description?: string;
      name?: string;
      version?: string;
    };
    LoginRequestDTO: {
      /** Format: email */
      email: string;
      password: string;
    };
    LogoutResponseDTO: {
      message: string;
    };
    Pagination: {
      /** Format: url */
      current?: string;
      /** Format: url */
      first?: string;
      /** Format: url */
      last?: string;
      /** Format: url */
      next?: string;
      page?: number;
      pages?: number;
      per_page?: number;
      /** Format: url */
      prev?: string;
      total?: number;
    };
    RefreshReponseDTO: {
      access_token: string;
    };
    RegisterRequestDTO: {
      /** Format: email */
      email: string;
      fname?: string;
      lname?: string;
      password: string;
    };
    Relation: {
      href: string;
      rel: string;
    };
    ReportDTO: {
      createdAt: string;
      filters?: Record<string, never>;
      format?: string;
      id: string;
      updatedAt: string;
    };
    ReportRequestDTO: {
      condition: Record<string, never>;
      eventId: number;
      userId: number;
    };
    ReportRequestDTOUpdate: {
      condition?: Record<string, never>;
      eventId?: number;
      userId?: number;
    };
    UserDTO: {
      createdAt: string;
      /** Format: email */
      email: string;
      fname?: string;
      id: string;
      isAdmin: boolean;
      lname?: string;
      updatedAt: string;
    };
    UserRequestDTO: {
      /** Format: email */
      email: string;
      fname?: string;
      lname?: string;
      password: string;
    };
    UserRequestDTOUpdate: {
      /** Format: email */
      email?: string;
      fname?: string;
      lname?: string;
      password?: string;
    };
    ValidationError: {
      detail?: {
        "<location>"?: {
          "<field_name>"?: string[];
        };
      };
      message?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
